{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\inaki\\\\OneDrive\\\\Documents\\\\Cours M2\\\\CSL\\\\projet_CSL\\\\nantes_prison_manager\\\\src\\\\view\\\\reduction.js\";\nimport React from 'react';\n\nfunction objectsEquals(o1, o2) {\n  return Object.keys(o1).length === Object.keys(o2).length && Object.keys(o1).every(p => o1[p] === o2[p]);\n}\n\nexport default class Reduction extends React.Component {\n  constructor() {\n    super();\n\n    this.compare = (a, b) => {\n      const nameA = a.lastname.toUpperCase();\n      const nameB = b.lastname.toUpperCase();\n      let comparison = 0;\n\n      if (nameA > nameB) {\n        comparison = 1;\n      } else if (nameA < nameB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    };\n\n    this.createSelectItems = array => {\n      array.sort(this.compare);\n      let options = [];\n\n      for (let i = 0; i < array.length; i++) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          id: i,\n          value: array[i].lastname + \" \" + array[i].firstname,\n          children: array[i].lastname + \" \" + array[i].firstname\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }, this));\n      }\n\n      return options;\n    };\n\n    this.state = {\n      prisoners: [],\n      prisoners_updated: false\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.prisoners_updated) {\n      this.getPrisoners();\n    }\n  }\n\n  async getPrisoners() {\n    await fetch('http://localhost:8080/prisoners/read', {\n      method: 'GET'\n    }) // Envoi requete au serveur\n    .then(res => res.json()) // Reponse de la requete\n    .then(out => {\n      // DonnÃ©es a recuperer\n      console.log(out.result);\n      out.result.forEach(elt => {\n        console.log(elt);\n      });\n\n      if (!objectsEquals(out, this.state.prisoners)) {\n        this.setState({\n          prisoners: out.result,\n          prisoners_updated: true\n        });\n      }\n    });\n  }\n\n  async updatePrisoner() {\n    let date_dec, duree_dec;\n\n    if (document.getElementById('date_decision').value !== \"\" && typeof document.getElementById('date_decision').value === 'string') {\n      date_dec = document.getElementById('date_decision').value;\n    } else throw new Error(\"view/condamnation.js : updatePrisoner() -> date is empty or not a string\");\n\n    if (document.getElementById('duree_decision').value !== \"\" && typeof document.getElementById('duree_decision').value === 'string') {\n      duree_dec = document.getElementById('duree_decision').value;\n    } else throw new Error(\"view/condamnation.js : updatePrisoner() -> duree is empty or not a string\");\n\n    if (document.getElementById('cdmn_select').selectedIndex !== null) {\n      console.log('Selectionnez un prisonier');\n    } else {\n      let select = document.getElementById(\"cdmn_select\");\n      let index = select.options[select.selectedIndex].id;\n      let array = this.state.prisoners.sort(this.compare);\n      let prisoner = array[index];\n      let newfields = {\n        date_dec: date_dec,\n        duree_dec: duree_dec\n      };\n      console.log(array[index]);\n      await fetch('http://localhost:8080/prisoners/update', {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prisoner: prisoner,\n          newfields: newfields\n        })\n      }).then(res => {\n        console.log('prisonier mis a jour');\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"Reduction\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Date decision : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date_decision\",\n          type: \"text\",\n          placeholder: \"dd/mm/aaaa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choisir prisonier :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"red_select\",\n          children: this.createSelectItems(this.state.prisoners)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Duree emprisonnement : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"duree_decision\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"red_valider\",\n          onClick: () => this.updatePrisoner(),\n          children: \"Valider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/inaki/OneDrive/Documents/Cours M2/CSL/projet_CSL/nantes_prison_manager/src/view/reduction.js"],"names":["React","objectsEquals","o1","o2","Object","keys","length","every","p","Reduction","Component","constructor","compare","a","b","nameA","lastname","toUpperCase","nameB","comparison","createSelectItems","array","sort","options","i","push","firstname","state","prisoners","prisoners_updated","componentDidMount","getPrisoners","fetch","method","then","res","json","out","console","log","result","forEach","elt","setState","updatePrisoner","date_dec","duree_dec","document","getElementById","value","Error","selectedIndex","select","index","id","prisoner","newfields","headers","body","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nfunction objectsEquals(o1, o2){\r\n    return(Object.keys(o1).length === Object.keys(o2).length \r\n              && Object.keys(o1).every(p => o1[p] === o2[p]));\r\n}\r\n\r\nexport default class Reduction extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            prisoners : [],\r\n            prisoners_updated : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.state.prisoners_updated){\r\n            this.getPrisoners();\r\n          }\r\n    }\r\n\r\n    async getPrisoners(){\r\n        await fetch('http://localhost:8080/prisoners/read', {method: 'GET'}) // Envoi requete au serveur\r\n              .then(res => res.json()) // Reponse de la requete\r\n              .then((out) => { // DonnÃ©es a recuperer\r\n                    console.log(out.result);\r\n                    out.result.forEach(elt => {\r\n                        console.log(elt);\r\n                    });\r\n                    if(!objectsEquals(out, this.state.prisoners)){\r\n                        this.setState({prisoners: out.result, prisoners_updated: true});\r\n                    }\r\n              });\r\n    }\r\n\r\n    compare = (a,b) => {\r\n        const nameA = a.lastname.toUpperCase();\r\n        const nameB = b.lastname.toUpperCase();\r\n\r\n        let comparison = 0;\r\n        if (nameA > nameB) {\r\n            comparison = 1;\r\n        } else if (nameA < nameB) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    createSelectItems = (array) => {\r\n        array.sort(this.compare);\r\n        let options = [];\r\n        for(let i=0; i<array.length; i++){\r\n            options.push(<option key={i} id={i} value={array[i].lastname +\" \"+ array[i].firstname}>{array[i].lastname + \" \" + array[i].firstname}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    async updatePrisoner(){\r\n        let date_dec, duree_dec; \r\n        if(document.getElementById('date_decision').value !== \"\" && typeof document.getElementById('date_decision').value === 'string'){\r\n            date_dec = document.getElementById('date_decision').value;\r\n        }\r\n        else throw new Error(\"view/condamnation.js : updatePrisoner() -> date is empty or not a string\");\r\n        if(document.getElementById('duree_decision').value !== \"\" && typeof document.getElementById('duree_decision').value === 'string'){\r\n            duree_dec = document.getElementById('duree_decision').value;\r\n        }\r\n        else throw new Error(\"view/condamnation.js : updatePrisoner() -> duree is empty or not a string\");\r\n        if(document.getElementById('cdmn_select').selectedIndex !== null ){\r\n            console.log('Selectionnez un prisonier');\r\n        }\r\n        else{\r\n            let select = document.getElementById(\"cdmn_select\");\r\n            let index = select.options[select.selectedIndex].id;\r\n            let array = this.state.prisoners.sort(this.compare);\r\n            let prisoner = array[index];\r\n            let newfields = {date_dec: date_dec, duree_dec: duree_dec};\r\n            console.log(array[index]);\r\n            await fetch('http://localhost:8080/prisoners/update', \r\n                        {\r\n                            method:'PUT',\r\n                            headers:{\"Content-Type\": \"application/json\"},\r\n                            body: JSON.stringify({prisoner: prisoner, newfields: newfields})\r\n                        }\r\n                    )\r\n                    .then((res) => {\r\n                        console.log('prisonier mis a jour');\r\n                    });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"Reduction\">\r\n                <div>\r\n                    <p>Date decision : </p>\r\n                    <input id=\"date_decision\" type=\"text\" placeholder=\"dd/mm/aaaa\"></input>\r\n                </div>\r\n                <div>\r\n                    <p>Choisir prisonier :</p>\r\n                    <select id=\"red_select\">\r\n                        {this.createSelectItems(this.state.prisoners)}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <p>Duree emprisonnement : </p>\r\n                    <input id=\"duree_decision\" type=\"text\"></input>\r\n                </div>\r\n                <div>\r\n                    <button id=\"red_valider\" onClick={() => this.updatePrisoner()}>Valider</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}