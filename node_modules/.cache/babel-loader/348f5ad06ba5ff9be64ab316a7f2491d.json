{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\inaki\\\\OneDrive\\\\Documents\\\\Cours M2\\\\CSL\\\\projet_CSL\\\\nantes_prison_manager\\\\src\\\\view\\\\prisoner.js\";\nimport React from 'react'; // Retourne 1 prisonier\n\nfunction ReactPrisoner(props) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    id: props.index,\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: props.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.dob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.cob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete_button\",\n        onClick: props.onClick,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n\n_c = ReactPrisoner;\n\nfunction objectsEquals(o1, o2) {\n  return Object.keys(o1).length === Object.keys(o2).length && Object.keys(o1).every(p => o1[p] === o2[p]);\n}\n\nexport default class Prisoner extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      prisoners: [],\n      prisoners_updated: false\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.prisoners_updated) {\n      this.readPrisoner();\n    }\n  }\n\n  async readPrisoner() {\n    await fetch('http://localhost:8080/prisoners/read', {\n      method: 'GET'\n    }) // Envoi requete au serveur\n    .then(res => res.json()) // Reponse de la requete\n    .then(out => {\n      // DonnÃ©es a recuperer\n      if (!objectsEquals(out, this.state.prisoners)) {\n        this.setState({\n          prisoners: out.result,\n          prisoners_updated: true\n        });\n      }\n    });\n  }\n\n  async addPrisoner() {\n    let new_lastname = 'default_lastname',\n        new_firstname = 'default_firstname',\n        new_date = 'xx/xx/xxxx',\n        new_city = 'default_city';\n\n    try {\n      if (document.getElementById(\"add_lastname\").value !== '' && typeof document.getElementById(\"add_lastname\").value === 'string') {\n        new_lastname = document.getElementById(\"add_lastname\").value;\n      } else throw new Error('view/prisoner.js : addPrisoner() -> lastname is empty or not a string');\n\n      if (document.getElementById(\"add_firstname\").value !== '' && typeof document.getElementById(\"add_firstname\").value === 'string') {\n        new_firstname = document.getElementById(\"add_firstname\").value;\n      } else throw new Error('view/prisoner.js : addPrisoner() -> firstname is empty or not a string');\n\n      if (document.getElementById(\"add_dob\").value !== '' && typeof document.getElementById(\"add_dob\").value === 'string') {\n        new_date = document.getElementById(\"add_dob\").value;\n      } else throw new Error('view/prisoner.js : addPrisoner() -> dob is empty or not a string');\n\n      if (document.getElementById(\"add_cob\").value !== '' && typeof document.getElementById(\"add_cob\").value === 'string') {\n        new_city = document.getElementById(\"add_cob\").value;\n      } else throw new Error('view/prisoner.js : addPrisoner() -> cob is empty or not a string');\n\n      let new_prisoner = {\n        lastname: new_lastname,\n        firstname: new_firstname,\n        date_naiss: new_date,\n        lieu_naiss: new_city\n      };\n      console.log(new_prisoner);\n      await fetch('http://localhost:8080/prisoners/create', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prisoner: {\n            new_prisoner\n          }\n        })\n      }).then(res => {\n        res.json();\n        this.readPrisoner();\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async updatePrisoner(i) {\n    let row = document.getElementsByTagName('tbody')[0].getElementsByTagName('tr')[i];\n    let checkbox = row.children[0].children[0];\n\n    if (checkbox.checked) {\n      console.log('modification');\n    } else console.log('envoi de la modification au serveur');\n  } // Rendu quand clic sur le bouton Prisoniers\n\n\n  render() {\n    let prisoners_array = [];\n    this.state.prisoners.forEach((elt, i) => {\n      prisoners_array.push( /*#__PURE__*/_jsxDEV(ReactPrisoner, {\n        index: i,\n        onChange: () => this.updatePrisoner(i),\n        num: elt.num,\n        lastname: elt.lastname,\n        firstname: elt.firstname,\n        dob: elt.date_naiss,\n        cob: elt.lieu_naiss,\n        onClick: () => console.log(i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Modif.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Numero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prenom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Naissance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lieu Naissance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Suppr.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [prisoners_array, /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: \"add\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"add_lastname\",\n              type: \"text\",\n              placeholder: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"add_firstname\",\n              type: \"text\",\n              placeholder: \"Prenom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"add_dob\",\n              type: \"text\",\n              placeholder: \"xx-xx-xxxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"add_cob\",\n              type: \"text\",\n              placeholder: \"xxxxx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.addPrisoner(),\n              children: \"Ajouter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactPrisoner\");","map":{"version":3,"sources":["C:/Users/inaki/OneDrive/Documents/Cours M2/CSL/projet_CSL/nantes_prison_manager/src/view/prisoner.js"],"names":["React","ReactPrisoner","props","index","onChange","num","lastname","firstname","dob","cob","onClick","objectsEquals","o1","o2","Object","keys","length","every","p","Prisoner","Component","constructor","state","prisoners","prisoners_updated","componentDidMount","readPrisoner","fetch","method","then","res","json","out","setState","result","addPrisoner","new_lastname","new_firstname","new_date","new_city","document","getElementById","value","Error","new_prisoner","date_naiss","lieu_naiss","console","log","headers","body","JSON","stringify","prisoner","e","updatePrisoner","i","row","getElementsByTagName","checkbox","children","checked","render","prisoners_array","forEach","elt","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// Retourne 1 prisonier\r\nfunction ReactPrisoner(props){\r\n    return(\r\n      <tr id={props.index}>\r\n        <td><input type=\"checkbox\" onChange={props.onChange}></input></td>\r\n        <td><p>{props.num}</p></td>\r\n        <td><p>{props.lastname}</p></td>\r\n        <td><p>{props.firstname}</p></td>\r\n        <td><p>{props.dob}</p></td>\r\n        <td><p>{props.cob}</p></td>\r\n        <td><button className=\"delete_button\" onClick={props.onClick}>X</button></td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nfunction objectsEquals(o1, o2){\r\n    return(Object.keys(o1).length === Object.keys(o2).length \r\n              && Object.keys(o1).every(p => o1[p] === o2[p]));\r\n}\r\n\r\nexport default class Prisoner extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            prisoners : [],\r\n            prisoners_updated : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(!this.state.prisoners_updated){\r\n            this.readPrisoner();\r\n          }\r\n    }\r\n\r\n    async readPrisoner(){\r\n        await fetch('http://localhost:8080/prisoners/read', {method: 'GET'}) // Envoi requete au serveur\r\n              .then(res => res.json()) // Reponse de la requete\r\n              .then((out) => { // DonnÃ©es a recuperer\r\n                if(!objectsEquals(out, this.state.prisoners)){\r\n                  this.setState({prisoners: out.result, prisoners_updated: true});\r\n                }\r\n              });\r\n    }\r\n\r\n    async addPrisoner(){\r\n      let new_lastname = 'default_lastname', new_firstname = 'default_firstname', new_date = 'xx/xx/xxxx', new_city = 'default_city';\r\n      try{\r\n        if(document.getElementById(\"add_lastname\").value !== '' && typeof document.getElementById(\"add_lastname\").value === 'string'){\r\n            new_lastname = document.getElementById(\"add_lastname\").value;\r\n        }\r\n        else throw new Error('view/prisoner.js : addPrisoner() -> lastname is empty or not a string')\r\n\r\n        if(document.getElementById(\"add_firstname\").value !== '' && typeof document.getElementById(\"add_firstname\").value === 'string'){\r\n            new_firstname = document.getElementById(\"add_firstname\").value;\r\n        }\r\n        else throw new Error('view/prisoner.js : addPrisoner() -> firstname is empty or not a string')\r\n\r\n        if(document.getElementById(\"add_dob\").value !== '' && typeof document.getElementById(\"add_dob\").value === 'string'){\r\n          new_date = document.getElementById(\"add_dob\").value;\r\n        }\r\n        else throw new Error('view/prisoner.js : addPrisoner() -> dob is empty or not a string')\r\n\r\n        if(document.getElementById(\"add_cob\").value !== '' && typeof document.getElementById(\"add_cob\").value === 'string'){\r\n            new_city = document.getElementById(\"add_cob\").value;\r\n        }\r\n        else throw new Error('view/prisoner.js : addPrisoner() -> cob is empty or not a string')\r\n\r\n        let new_prisoner =\r\n          {\r\n            lastname:new_lastname,\r\n            firstname:new_firstname,\r\n            date_naiss:new_date,\r\n            lieu_naiss: new_city\r\n        };\r\n        console.log(new_prisoner);\r\n        await fetch('http://localhost:8080/prisoners/create', \r\n                    {\r\n                      method:'POST',\r\n                      headers:{\"Content-Type\": \"application/json\"},\r\n                      body:JSON.stringify({prisoner:{new_prisoner}}),              \r\n                    }\r\n              )\r\n              .then((res) => {\r\n                res.json();\r\n                this.readPrisoner();\r\n              });\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    async updatePrisoner(i){\r\n        let row = document.getElementsByTagName('tbody')[0].getElementsByTagName('tr')[i];\r\n        let checkbox = row.children[0].children[0];\r\n        if(checkbox.checked){\r\n            console.log('modification');\r\n        }\r\n        else console.log('envoi de la modification au serveur')\r\n    }\r\n\r\n    // Rendu quand clic sur le bouton Prisoniers\r\n    render(){\r\n        let prisoners_array = [];\r\n        this.state.prisoners.forEach((elt, i) => {\r\n            prisoners_array.push(\r\n              <ReactPrisoner \r\n                index = {i} \r\n                key = {i} \r\n                onChange={() => this.updatePrisoner(i)}\r\n                num = {elt.num}\r\n                lastname = {elt.lastname} \r\n                firstname = {elt.firstname} \r\n                dob = {elt.date_naiss} \r\n                cob = {elt.lieu_naiss}\r\n                onClick = {() => console.log(i)} />\r\n            );\r\n        });\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Modif.</th>\r\n                        <th>Numero</th>\r\n                        <th>Nom</th>\r\n                        <th>Prenom</th>\r\n                        <th>Date Naissance</th>\r\n                        <th>Lieu Naissance</th>\r\n                        <th>Suppr.</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {prisoners_array}\r\n                    <tr id=\"add\">\r\n                        <td>+</td>\r\n                        <td></td>\r\n                        <td><input id=\"add_lastname\" type=\"text\" placeholder=\"Nom\"></input></td>\r\n                        <td><input id=\"add_firstname\" type=\"text\" placeholder=\"Prenom\"></input></td>\r\n                        <td><input id=\"add_dob\" type=\"text\" placeholder=\"xx-xx-xxxx\"></input></td>\r\n                        <td><input id=\"add_cob\" type=\"text\" placeholder=\"xxxxx\"></input></td>\r\n                        <td><button onClick={() => this.addPrisoner()}>Ajouter</button></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}